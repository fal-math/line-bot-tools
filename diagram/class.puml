@startuml class diagram
skinparam linetype ortho

class ConfigService {
  +getRequired(key: string): string
  +getJson<T>(key: string): T
  +getPracticeLocations(): Map<string, PracticeLocation>
}

class DateUtils {
  <<static>>
  +startOfDay(d?: Date): Date
  +addDays(d: Date, n: int): Date
  +parseMD(md: string): Date
  +parseYMD(ymd: string): Date
  +formatMD(date: Date): string
  +formatYMD(date: Date): string
}

class stringUtils {
  <<static>>
  +stripCss(text: string): string
  +htmlToPlainText(html: string): string
  +formatKarutaClass(input: string): KarutaClass[]
  +removeBracketSymbols(input: string): string
}

class LineService {
  +pushText(to: string, text: string, substitution?: object, retryKey?: string)
  +pushError(text: string, retryKey?: string): void
  +pushImage(to: string, original: string, preview: string, retryKey?: string)
}

class ChouseisanService {
  +getSummary(start: Date, end: Date): ClassMap<Registration[]>
}
class CalendarService {
  +groupByClass<T extends BaseEvent>(events: T[]): ClassMap<T[]>
  +get<K extends EventTypeKey>(type: K, start: Date, end: Date): EventMap[K][]
  +createCalenderEvent(
  params: {start: Date; summary: string; location?: string; description?: string;}, 
  calendarId: string)
  : GoogleAppsScript.Calendar.CalendarEvent 
 }

class LineWebhookHandler{
  +handle(text: string, to: string): void
}

class CardShufffleService{
  +do():{ clubCardsStr: string, myCardsStr: string }
}

class WbgtService{
  +getMessage():{ message: string; values?: Parsed } 
}

class Announcer {
  +weekly(to: string): void
  +deadlineToday(to: string): void
  +deadlineNextWeek(to: string): void
}

class Notify {
  +deadlineToday(to: string): void
  +finalIsToday(to: string, mentionee: string): void
  +todayPractice(to: string): void
  +chouseisanWeekly(to: string): void
}

class Attendance {
  +do(to: string): void
}

class Main {  
  +announceWeekly(): void
  +announceDeadlineToday(): void
  +announceDeadlineNextWeek(): void
  +NotifyFinalToday(): void
  +NotifyTodayPractice(): void
  +NotifyChouseisanWeekly(): void
  +inboxRouterProcesser(): void
  +doPost(e: GoogleAppsScript.Events.DoPost): void
  ' +sendMonthlyCalendar(): void
  +setupTriggers(): void
}

class SetupTriggers {
  +setupTriggers(): void
}

' ————————————————————————————————————————————
' 関係（矢印）の向きと相対配置を指定
' ————————————————————————————————————————————

' Main 
Main -down-|> Announcer : calls
Main -down-|> Notify : calls
Main -down-|> Attendance : calls
Main -down-|> LineWebhookHandler : calls

' Announcer 
Announcer -down-> DateUtils
Announcer -down-> stringUtils
Announcer -down-> LineService
Announcer -down-> CalendarService
Announcer -down-> ChouseisanService

' Notify 
Notify -down-> DateUtils
Notify -down-> CardShufffleService
Notify -down-> ChouseisanService
Notify -down-> WbgtService
Notify -down-> LineService
Notify -down-> CalendarService
Notify -down-> stringUtils

' ChouseisanService
ChouseisanService -down-> DateUtils

' ChouseisanService
CalendarService -down-> stringUtils

' LineWebhookHandler
LineWebhookHandler -down-> DateUtils
LineWebhookHandler -down-> LineService
LineWebhookHandler -down-> CalendarService

' Attendance
Attendance -down-> LineService
Attendance -down-> stringUtils

CalendarService -down-> DateUtils

Main .up.> SetupTriggers : 「トリガー設定」

@enduml
