@startuml Class Diagram of Types
skinparam linetype ortho

enum KarutaClass {
  A
  B
  C
  D
  E
  F
  G
}

class ClassMap<T> {
}

class BaseEvent {
  +date: Date
  +targetClasses: string | KarutaClass[]
}

class MatchEvent {
  +title: string
  +location: string
  +targetClasses: KarutaClass[]
  +mapUrl?: string
}

class ExternalPracticeEvent {
  +title: string
  +location: string
  +targetClasses: KarutaClass[]
  +mapUrl?: string
  +timeRange?: string
  +description?: string
}

class ClubPracticeEvent {
  +location: PracticeLocation
  +practiceType: string
  +personInCharge: string
  +timeRange: string
}

class InternalDeadlineEvent {
  +title: string
  +isExternalPractice: boolean
  +isMatch: boolean
  +targetClasses: KarutaClass[]
}

BaseEvent <|-- ClubPracticeEvent
BaseEvent <|-- MatchEvent
BaseEvent <|-- ExternalPracticeEvent
BaseEvent <|-- InternalDeadlineEvent

' PracticeLocation
class PracticeLocation {
  +buildingName: string
  +shortBuildingName: ShortBuildingName
  +mapUrl: string
  +clubName: string
}

class ParticipantStatus {
  +attending: string[]
  +notAttending: string[]
  +undecided: string[]
}

class Registration {
  +deadline: Date
  +eventDate: Date
  +participants: ParticipantStatus
  +title: string
}

class ImageUrls {
  +original: string
  +preview: string
}

class Mention {
  +type: string
  +mentionee: Object
}

class SubstitutionMap {
  +[key: string]: Mention
}

ClassMap -up-> KarutaClass
BaseEvent -up-> KarutaClass
Registration --> ParticipantStatus
ClubPracticeEvent --> PracticeLocation
SubstitutionMap --> Mention
@enduml